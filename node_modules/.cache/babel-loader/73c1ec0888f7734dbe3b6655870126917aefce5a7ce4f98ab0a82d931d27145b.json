{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ac485\\\\Desktop\\\\sharing_recipies\\\\src\\\\OurCommunity.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = '6D09ACA3-EB2B-47C4-9E8A-4B8C9E1A9F29';\nconst apiUrl = 'https://api.twingly.com/reviews/search/api/v3/reviews';\n\n// Sample query parameters (modify as needed)\nconst queryParameters = {\n  q: 'example',\n  // Your search query\n  limit: 10,\n  // Number of results to retrieve\n  sort: 'date' // Sorting order (e.g., 'date', 'relevance')\n};\n\n// Constructing the URL with query parameters\nconst queryString = new URLSearchParams(queryParameters).toString();\nconst fullUrl = `${apiUrl}?apikey=${apiKey}&${queryString}`;\n\n// Making the fetch request\nfetch(fullUrl).then(response => {\n  if (!response.ok) {\n    throw new Error(`HTTP error! Status: ${response.status}`);\n  }\n  return response.json();\n}).then(data => {\n  // Handle the response data\n  console.log(data);\n}).catch(error => {\n  // Handle errors\n  console.error('Error fetching data:', error.message);\n});\nconst OurCommunity = () => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"nigro\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c = OurCommunity;\nexport default OurCommunity;\nvar _c;\n$RefreshReg$(_c, \"OurCommunity\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","apiKey","apiUrl","queryParameters","q","limit","sort","queryString","URLSearchParams","toString","fullUrl","fetch","then","response","ok","Error","status","json","data","console","log","catch","error","message","OurCommunity","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ac485/Desktop/sharing_recipies/src/OurCommunity.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst apiKey = '6D09ACA3-EB2B-47C4-9E8A-4B8C9E1A9F29';\r\nconst apiUrl = 'https://api.twingly.com/reviews/search/api/v3/reviews';\r\n\r\n// Sample query parameters (modify as needed)\r\nconst queryParameters = {\r\n  q: 'example',  // Your search query\r\n  limit: 10,      // Number of results to retrieve\r\n  sort: 'date',   // Sorting order (e.g., 'date', 'relevance')\r\n};\r\n\r\n// Constructing the URL with query parameters\r\nconst queryString = new URLSearchParams(queryParameters).toString();\r\nconst fullUrl = `${apiUrl}?apikey=${apiKey}&${queryString}`;\r\n\r\n// Making the fetch request\r\nfetch(fullUrl)\r\n  .then(response => {\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n    return response.json();\r\n  })\r\n  .then(data => {\r\n    // Handle the response data\r\n    console.log(data);\r\n  })\r\n  .catch(error => {\r\n    // Handle errors\r\n    console.error('Error fetching data:', error.message);\r\n  });\r\n\r\nconst OurCommunity =() =>{\r\n    return (\r\n        <p>nigro</p>\r\n    )\r\n}\r\nexport default OurCommunity;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAG,sCAAsC;AACrD,MAAMC,MAAM,GAAG,uDAAuD;;AAEtE;AACA,MAAMC,eAAe,GAAG;EACtBC,CAAC,EAAE,SAAS;EAAG;EACfC,KAAK,EAAE,EAAE;EAAO;EAChBC,IAAI,EAAE,MAAM,CAAI;AAClB,CAAC;;AAED;AACA,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAACL,eAAe,CAAC,CAACM,QAAQ,CAAC,CAAC;AACnE,MAAMC,OAAO,GAAI,GAAER,MAAO,WAAUD,MAAO,IAAGM,WAAY,EAAC;;AAE3D;AACAI,KAAK,CAACD,OAAO,CAAC,CACXE,IAAI,CAACC,QAAQ,IAAI;EAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;EAC3D;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;EACZ;EACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;AACnB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;EACd;EACAH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;AACtD,CAAC,CAAC;AAEJ,MAAMC,YAAY,GAAEA,CAAA,KAAK;EACrB,oBACIxB,OAAA;IAAAyB,QAAA,EAAG;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAEpB,CAAC;AAAAC,EAAA,GAJKN,YAAY;AAKlB,eAAeA,YAAY;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}