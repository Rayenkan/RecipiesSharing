{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ac485\\\\Desktop\\\\sharing_recipies\\\\src\\\\whatToCockToday.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhatToCockToday = () => {\n  _s();\n  const apiKey = '1';\n  const [Meals, setMeals] = useState([]);\n  const [apiUrl, setApiUrl] = useState(\"https://www.themealdb.com/api/json/v1/${apiKey}/latest.php\");\n  const [category, setCategory] = useState(\"\");\n  useEffect(() => {\n    console.log(apiUrl);\n    const GetMeals = async category => {\n      try {\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setMeals(data);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    };\n    GetMeals(category);\n  }, []);\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 1500,\n    pauseOnHover: true,\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        infinite: true,\n        dots: false\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        initialSlide: 2,\n        dots: false\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        dots: false\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"md:h-[40vh] lg:h-[80vh] h-[35%] mt-14 bg-orange-50 w-[90%] ml-[5%]\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"text-xl\",\n        children: \"What To Cock Today \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"text-sm text-gray-600\",\n        children: \"Fast ,Fresh , and FoolProof\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(WhatToCockToday, \"f+dIbh+thH9nhE6GEWKwsoF0ajU=\");\n_c = WhatToCockToday;\nexport default WhatToCockToday;\nvar _c;\n$RefreshReg$(_c, \"WhatToCockToday\");","map":{"version":3,"names":["React","useState","useEffect","Slider","jsxDEV","_jsxDEV","WhatToCockToday","_s","apiKey","Meals","setMeals","apiUrl","setApiUrl","category","setCategory","console","log","GetMeals","response","fetch","ok","Error","status","data","json","error","message","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","pauseOnHover","responsive","breakpoint","initialSlide","class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ac485/Desktop/sharing_recipies/src/whatToCockToday.js"],"sourcesContent":["import React ,{useState ,useEffect} from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst WhatToCockToday=() =>{\r\n    const apiKey='1';\r\n    const [Meals, setMeals] = useState([]);\r\n    const [apiUrl , setApiUrl]=useState(\"https://www.themealdb.com/api/json/v1/${apiKey}/latest.php\");\r\n    const [category ,setCategory]=useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        console.log(apiUrl)\r\n        const GetMeals = async (category) => {\r\n            try {\r\n                const response = await fetch(apiUrl);\r\n\r\n                if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n\r\n                setMeals(data);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error.message);\r\n            }\r\n        };\r\n\r\n        GetMeals(category);\r\n    }, []);\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 4,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        autoplaySpeed: 1500,\r\n        pauseOnHover: true,\r\n        responsive: [\r\n          {\r\n            breakpoint: 1024,\r\n            settings: {\r\n              slidesToShow: 3,\r\n              slidesToScroll: 3,\r\n              infinite: true,\r\n              dots: false\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 600,\r\n            settings: {\r\n              slidesToShow: 2,\r\n              slidesToScroll: 2,\r\n              initialSlide: 2,\r\n              dots:false\r\n            }\r\n          },\r\n          {\r\n            breakpoint: 480,\r\n            settings: {\r\n              slidesToShow: 1,\r\n              slidesToScroll: 1,\r\n              dots:false\r\n            }\r\n          }\r\n        ]\r\n      };\r\n    return (\r\n        <div class=\"md:h-[40vh] lg:h-[80vh] h-[35%] mt-14 bg-orange-50 w-[90%] ml-[5%]\">\r\n            <div>\r\n                <p class=\"text-xl\">What To Cock Today </p>\r\n                <p class=\"text-sm text-gray-600\">Fast ,Fresh , and FoolProof</p>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n};\r\nexport default WhatToCockToday;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}