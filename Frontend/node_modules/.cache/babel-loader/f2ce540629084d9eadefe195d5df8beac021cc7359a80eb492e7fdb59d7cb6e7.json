{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ac485\\\\Desktop\\\\sharing_recipies\\\\src\\\\recipieDetails\\\\components\\\\ingrediants.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ingredients = props => {\n  _s();\n  const id = props.data;\n  const ingredientsList = [];\n  useEffect(() => {\n    const getAllMealingrediants = async () => {\n      const apiUrl = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n      try {\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const fetchedMeal = await response.json();\n        const ingredientsList = Object.keys(fetchedMeal.meals[0]).filter(key => key.startsWith('strIngredient') && mealData.meals[0][key] !== null && mealData.meals[0][key] !== \"\").map(key => ({\n          ingredient: mealData.meals[0][key],\n          measure: mealData.meals[0][`strMeasure${key.slice(-1)}`]\n        }));\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n      }\n    };\n    getAllMealingrediants();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ingredientsList.map(ingredient => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [ingredient.ingredient, \" (\", ingredient.measure, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n_s(Ingredients, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Ingredients;\nexport default Ingredients;\nvar _c;\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Ingredients","props","_s","id","data","ingredientsList","getAllMealingrediants","apiUrl","response","fetch","ok","Error","status","fetchedMeal","json","Object","keys","meals","filter","key","startsWith","mealData","map","ingredient","measure","slice","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ac485/Desktop/sharing_recipies/src/recipieDetails/components/ingrediants.js"],"sourcesContent":["import React , {useEffect} from \"react\";\r\n\r\nconst Ingredients =(props) =>{\r\n        const id = props.data;\r\n        const ingredientsList = [];\r\n      \r\n        useEffect(() => {\r\n          const getAllMealingrediants = async () => {\r\n            const apiUrl = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\r\n      \r\n            try {\r\n              const response = await fetch(apiUrl);\r\n      \r\n              if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n              }\r\n      \r\n              const fetchedMeal = await response.json();\r\n              const ingredientsList = Object.keys(fetchedMeal.meals[0])\r\n                .filter(key => key.startsWith('strIngredient') && mealData.meals[0][key] !== null && mealData.meals[0][key] !== \"\")\r\n                .map(key => ({\r\n                    ingredient: mealData.meals[0][key],\r\n                    measure: mealData.meals[0][`strMeasure${key.slice(-1)}`]\r\n                }));\r\n            } catch (error) {\r\n              console.error('Error fetching data:', error.message);\r\n            }\r\n            \r\n          };\r\n      \r\n          getAllMealingrediants();\r\n        }, [id]);\r\n    return (\r\n         <div>\r\n            {ingredientsList.map((ingredient) => (\r\n                <ul>\r\n                    <li>{ingredient.ingredient} ({ingredient.measure})</li>\r\n                </ul>\r\n            ))}\r\n         </div>\r\n    )\r\n    \r\n}\r\nexport default Ingredients;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACrB,MAAMC,EAAE,GAAGF,KAAK,CAACG,IAAI;EACrB,MAAMC,eAAe,GAAG,EAAE;EAE1BR,SAAS,CAAC,MAAM;IACd,MAAMS,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,MAAMC,MAAM,GAAI,wDAAuDJ,EAAG,EAAC;MAE3E,IAAI;QACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,CAAC;QAEpC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;QAC3D;QAEA,MAAMC,WAAW,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACzC,MAAMT,eAAe,GAAGU,MAAM,CAACC,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CACtDC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,UAAU,CAAC,eAAe,CAAC,IAAIC,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC,KAAK,IAAI,IAAIE,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC,KAAK,EAAE,CAAC,CAClHG,GAAG,CAACH,GAAG,KAAK;UACTI,UAAU,EAAEF,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC;UAClCK,OAAO,EAAEH,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAE,aAAYE,GAAG,CAACM,KAAK,CAAC,CAAC,CAAC,CAAE,EAAC;QAC3D,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;MACtD;IAEF,CAAC;IAEDtB,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EACZ,oBACKJ,OAAA;IAAA8B,QAAA,EACIxB,eAAe,CAACiB,GAAG,CAAEC,UAAU,iBAC5BxB,OAAA;MAAA8B,QAAA,eACI9B,OAAA;QAAA8B,QAAA,GAAKN,UAAU,CAACA,UAAU,EAAC,IAAE,EAACA,UAAU,CAACC,OAAO,EAAC,GAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGf,CAAC;AAAA/B,EAAA,CAxCKF,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}